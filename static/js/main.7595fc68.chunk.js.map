{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","App.js","index.js"],"names":["AddTask","tasks","setTasks","useState","taskName","setTaskName","finishDate","setFinishDate","taskId","setTaskId","onSubmit","e","preventDefault","newTasks","task","id","name","finish","active","finishedDate","push","prevState","alert","htmlFor","type","placeholder","onChange","target","value","className","onClick","class","Task","handleDoneButton","tasksCopy","found","find","el","index","indexOf","data","Date","toLocaleString","handleRemoveButton","splice","map","TaskList","newArr","filter","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7595fc68.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AddTask = ({ tasks, setTasks }) => {\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [finishDate, setFinishDate] = useState();\r\n  const [taskId, setTaskId] = useState(1);\r\n  const handleNameChange = (e) => {\r\n    setTaskName(e.target.value);\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setFinishDate(e.target.value);\r\n  };\r\n\r\n  const handleClearButton = (e) => {\r\n    e.preventDefault();\r\n    setTasks([]);\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    if (!taskName || !finishDate) {\r\n      alert(\"Uzupełnij każde pole\");\r\n      return;\r\n    }\r\n    const newTasks = [...tasks];\r\n    const task = {\r\n      id: taskId,\r\n      name: taskName,\r\n      finish: finishDate,\r\n      active: true,\r\n      finishedDate: \"\",\r\n    };\r\n    newTasks.push(task);\r\n    setTaskId((prevState) => prevState + 1);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={submitForm}>\r\n        <label htmlFor=\"task-name\">\r\n          <p>Nazwa zadania</p>\r\n          <input\r\n            type=\"text\"\r\n            id=\"task-name\"\r\n            placeholder=\"Nazwa zadania\"\r\n            onChange={handleNameChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"task-finish-date\">\r\n          <p>Data zakończenia</p>\r\n          <input\r\n            type=\"date\"\r\n            id=\"task-finish-date\"\r\n            onChange={handleDateChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">\r\n          Dodaj <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n        <button type=\"remove\" onClick={handleClearButton}>\r\n          Usuń wszystkie <i class=\"far fa-trash-alt\"></i>\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\n\r\nconst Task = ({ tasks, setTasks }) => {\r\n  const handleDoneButton = (id) => {\r\n    const tasksCopy = [...tasks];\r\n    const found = tasksCopy.find((el) => el.id === id);\r\n    const index = tasksCopy.indexOf(found);\r\n    tasksCopy[index].active = !tasksCopy[index].active;\r\n    let data = new Date();\r\n    tasksCopy[index].finishedDate = data.toLocaleString();\r\n    setTasks(tasksCopy);\r\n  };\r\n  const handleRemoveButton = (id) => {\r\n    const tasksCopy = [...tasks];\r\n    const found = tasksCopy.find((el) => el.id === id);\r\n    tasksCopy.splice(tasksCopy.indexOf(found), 1);\r\n    setTasks(tasksCopy);\r\n  };\r\n\r\n  return tasks.map((task) => {\r\n    if (task.active) {\r\n      return (\r\n        <li key={task.id} className=\"task active\">\r\n          <button className=\"add\" onClick={() => handleDoneButton(task.id)}>\r\n            {!task.active ? <i className=\"fas fa-check\"></i> : null}\r\n          </button>{\" \"}\r\n          {task.name} <br /> Do kiedy: {task.finish} <br />\r\n          <button\r\n            className=\"remove\"\r\n            onClick={() => handleRemoveButton(task.id)}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </li>\r\n      );\r\n    } else if (!task.active) {\r\n      return (\r\n        <li key={task.id} className=\"task finished\">\r\n          <button\r\n            className=\"add finished\"\r\n            onClick={() => handleDoneButton(task.id)}\r\n          >\r\n            <i className=\"fas fa-check\"></i>\r\n          </button>\r\n          {task.name} <br /> Data zakończenia: {task.finishedDate}\r\n          <button\r\n            className=\"remove\"\r\n            onClick={() => handleRemoveButton(task.id)}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </li>\r\n      );\r\n    } else return 0;\r\n  });\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nconst TaskList = ({ tasks, setTasks }) => {\r\n  const checkForFinished = () => {\r\n    const newArr = [...tasks];\r\n    const myArray = newArr.filter((el) => {\r\n      if (!el.active) {\r\n        return el.id;\r\n      }\r\n      return 0;\r\n    });\r\n    myArray.map((item) => {\r\n      const index = newArr.indexOf(item);\r\n      newArr.splice(index, 1);\r\n      setTasks(newArr);\r\n      return 0;\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <button className=\"remove-finished\" onClick={checkForFinished}>\r\n        Usuń wszystkie zakończone <i class=\"far fa-trash-alt\"></i>\r\n      </button>\r\n      <ul className=\"task_list\">\r\n        <Task tasks={tasks} setTasks={setTasks} />\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import \"./styles/App.scss\";\nimport AddTask from \"./components/AddTask\";\nimport TaskList from \"./components/TaskList\";\nimport React, { useState } from \"react\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  return (\n    <div className=\"app\">\n      <AddTask tasks={tasks} setTasks={setTasks} />\n      <TaskList tasks={tasks} setTasks={setTasks} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}